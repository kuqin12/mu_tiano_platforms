## @file
# Template file for generating a build job matrix for the packages currently supported for
# build in Mu Tiano Platforms.
#
# Copyright (c) Microsoft Corporation.
# Copyright (c) 2020 - 2021, ARM Limited. All rights reserved.<BR>
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

parameters:
- name: arch_list # intentionally ignored
  displayName: Architectures (e.g. IA32, X64)
  type: string
  default: ''
- name: extra_build_args
  displayName: Extra Build Command Arguments
  type: string
  default: ''
- name: extra_install_step
  displayName: Extra Install Steps
  type: stepList
  default:
    - script: echo No extra steps provided
- name: tool_chain_tag
  displayName: Tool Chain (e.g. VS2022)
  type: string
  default: ''
- name: vm_image
  displayName: Virtual Machine Image (e.g. windows-latest)
  type: string
  default: 'windows-latest'
- name: pool_name
  displayName: Pool Name
  type: string
  default: ''
- name: os_type
  displayName: OS type on the self-hosted agent pools
  type: string
  enum:
  - Windows_NT
  - Linux
  default: Windows_NT
- name: container_image
  displayName: Container Image
  type: string
  default: ''
- name: build_matrix
  type: object
  default:
    # Use matrix to speed up the build process
    TARGET_QEMU:
      Pkgs: 'QemuPkg'
      Targets: 'DEBUG,RELEASE,NO-TARGET,NOOPT'
      ArchList: IA32,X64,AARCH64
      SelfHostAgent: false
    TARGET_QEMU_ARM:
      Pkgs: 'QemuPkg'
      Targets: 'DEBUG,RELEASE,NO-TARGET,NOOPT'
      ArchList: IA32,X64,AARCH64
      SelfHostAgent: true
    TARGET_Q35:
      Pkgs: 'QemuQ35Pkg'
      Targets: 'NO-TARGET'
      ArchList: IA32,X64
      SelfHostAgent: false
    TARGET_Q35_ARM:
      Pkgs: 'QemuQ35Pkg'
      Targets: 'NO-TARGET'
      ArchList: IA32,X64
      SelfHostAgent: true
    TARGET_SBSA:
      Pkgs: 'QemuSbsaPkg'
      Targets: 'NO-TARGET'
      ArchList: AARCH64
      SelfHostAgent: false
    TARGET_SBSA_ARM:
      Pkgs: 'QemuSbsaPkg'
      Targets: 'NO-TARGET'
      ArchList: AARCH64
      SelfHostAgent: true


jobs:

- ${{ each item in parameters.build_matrix }}:
  - job: Build_${{ item.Key }}
    timeoutInMinutes: 120
    condition: or(eq(variables['tool_chain_tag'], 'GCC5'), not(startsWith('${{ item.Key }}', 'TARGET_SBSA')))

    workspace:
      clean: all

    ${{ if and(ne(parameters.container_image, ''), not(eq(item.Value.SelfHostAgent, true))) }}:
      container: ${{ parameters.container_image }}

    ${{ if eq(item.Value.SelfHostAgent, true) }}:
      pool:
        name: ${{ parameters.pool_name }}
        name: ${{ parameters.os_type }}
    ${{ else }}:
      pool:
        vmImage: ${{ parameters.vm_image }}

    steps:
    - ${{ if and(ne(parameters.container_image, ''), not(contains(parameters.vm_image, 'windows'))) }}:
      - script: echo "##vso[task.prependpath]/home/vsts_azpcontainer/.local/bin"
        displayName: Add User Local Bin to Path
    - template: Steps/PrGate.yml@mu_devops
      parameters:
        artifacts_identifier: '${{ item.Key }} ${{ item.Value.Targets }}'
        build_archs: ${{ item.Value.ArchList }}
        build_pkgs: ${{ item.Value.Pkgs }}
        build_targets: ${{ item.Value.Targets }}
        do_ci_build: true
        do_ci_setup: true
        do_non_ci_build: false
        do_non_ci_setup: true
        do_pr_eval: true
        extra_build_args: ${{ parameters.extra_build_args }}
        extra_install_step: ${{ parameters.extra_install_step }}
        install_tools: ${{ and(not(eq(item.Value.SelfHostAgent, true)), eq(parameters.container_image, '')) }}
        tool_chain_tag: ${{ parameters.tool_chain_tag }}
